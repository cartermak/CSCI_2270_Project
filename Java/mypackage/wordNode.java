/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package mypackage;

public class wordNode {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected wordNode(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(wordNode obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        testJNI.delete_wordNode(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void setWord(String value) {
    testJNI.wordNode_word_set(swigCPtr, this, value);
  }

  public String getWord() {
    return testJNI.wordNode_word_get(swigCPtr, this);
  }

  public void setParts(PartPVector value) {
    testJNI.wordNode_parts_set(swigCPtr, this, PartPVector.getCPtr(value), value);
  }

  public PartPVector getParts() {
    long cPtr = testJNI.wordNode_parts_get(swigCPtr, this);
    return (cPtr == 0) ? null : new PartPVector(cPtr, false);
  }

  public void setLeft(wordNode value) {
    testJNI.wordNode_left_set(swigCPtr, this, wordNode.getCPtr(value), value);
  }

  public wordNode getLeft() {
    long cPtr = testJNI.wordNode_left_get(swigCPtr, this);
    return (cPtr == 0) ? null : new wordNode(cPtr, false);
  }

  public void setRight(wordNode value) {
    testJNI.wordNode_right_set(swigCPtr, this, wordNode.getCPtr(value), value);
  }

  public wordNode getRight() {
    long cPtr = testJNI.wordNode_right_get(swigCPtr, this);
    return (cPtr == 0) ? null : new wordNode(cPtr, false);
  }

  public wordNode() {
    this(testJNI.new_wordNode(), true);
  }

}
